data("Boston")
Boston
ggplot(data=Boston, aes(x = age))+geom_bar(fill ="blue",colour="blue")
data("Animals")
Animals
ggplot(data=Animals, aes(x=body, y=brain))+geom_point()
data("Boston")
Boston
ggplot(data=Boston, aes(x = age))+geom_bar(fill ="blue",colour="blue")
data("iris")
iris
ggplot(data = iris, aes(x=Petal.Length, y=Petal.Width))+geom_bar(stat = "identity", fill="purple")
library(ggplot2)
data("Animals")
Animals
ggplot(data=Animals, aes(x=body, y=brain))+geom_point()
data("Boston")
Boston
ggplot(data=Boston, aes(x = age))+geom_bar(fill ="blue",colour="blue")
data("iris")
iris
ggplot(data = iris, aes(x=Petal.Length, y=Petal.Width))+geom_bar(stat = "identity", fill="purple")
library(ggplot2)
data("Animals")
Animals
ggplot(data=Animals, aes(x=body, y=brain))+geom_point()
data("Boston")
Boston
ggplot(data=Boston, aes(x = age))+geom_bar(fill ="blue",colour="blue")
install.packages("ggplt2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("MASS")
data("Animals")
ggplot(data=Animals, aes(x=body, y=brain))+geom_point()
Amimals
library(tm)
library(NLP)
library(tm)
data("Animals")
ggplot(data=Animals, aes(x=body, y=brain))+geom_point()
data("Boston")
Boston
ggplot(data=Boston, aes(x = age))+geom_bar(fill ="blue",colour="blue")
data("iris")
iris
ggplot(data = iris, aes(x=Petal.Length, y=Petal.Width))+geom_bar(stat = "identity", fill="purple")
library(ggplot2)
library(MASS)
data
data("Animals")
ggplot(data=Animals, aes(x=body, y=brain))+geom_point()
data("Boston")
Boston
ggplot(data=Boston, aes(x = age))+geom_bar(fill ="blue",colour="blue")
data("iris")
iris
ggplot(data = iris, aes(x=Petal.Length, y=Petal.Width))+geom_bar(stat = "identity", fill="purple")
library(ggplot2)
data("Animals")
ggplot(data=Animals, aes(x=body, y=brain))+geom_point()
View(iris)
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point(stat = "identity")
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point()
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point(stat = "identity")
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point(stat = "identity")
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point()
ggplot(data = iris, aes(x=Petal.Length, y=Petal.Width))+geom_bar(stat = "identity", fill="purple")
ggplot(data = iris, aes(x=Petal.Length, y=Petal.Width))+geom_bar( fill="purple")
ggplot(data = iris, aes(x=Petal.Length, y=Petal.Width))+geom_bar(stat = "identity", fill="purple")
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point()
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point(colour=Species)
iris
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width))+geom_point(colour =Species)
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width, colour =Species))+geom_point()
iris
Animals
ggplot(data=Animals, aes(x=body, y=brain, colour =body))+geom_point()
ggplot(data=Animals, aes(x=body, y=brain, colour =body,brain))+geom_point()
ggplot(data=Animals, aes(x=body, y=brain, colour =body+brain))+geom_point()
ggplot(data=Animals, aes(x=body, y=brain, colour =body))+geom_point()
ggplot(data=iris, aes(x=Petal.Length, y=Petal.Width, colour =Species))+geom_point()
Insurance
library(Insurance)
cats
view(cats)
View(cats)
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length , fill =  Species))+
geom_histogram(binwidth = 1)
iris
cats
data("cats")
ggplot(data =cats, aes(x=Bwt, y=Hwy, fill= Sex))+geom_histogram()
data("cats")
ggplot(data =cats, aes(x=Bwt, y=Hwt, fill= Sex))+geom_histogram()
ggplot(data =cats, aes(x=Bwt, y=Hwt, fill= Sex))+geom_histogram(stat=identity)
ggplot(data =cats, aes(x=Bwt, y=Hwt, fill= Sex))+geom_histogram(stat="identity")
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram()
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram()
ggplot(data =cats, aes(x=Bwt, y=Hwt, fill= Sex))+geom_histogram(stat="identity")
ggplot(data =cats, aes(x=Bwt, y=Hwt, fill= Sex))+geom_histogram(stat="identity")
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram()
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram(binwidth = 1)
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram(binwidth = 0.5)
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram(binwidth = 0.1)
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram(binwidth = 0)
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram()
ggplot(data =cats, aes(x=Bwt, fill= Sex))+geom_histogram()
ggplot(data =cats, aes(x=Bwt, y=Hwt, fill= Sex))+geom_histogram(stat="identity")
View(Animals)
Cars93
View(Cars93)
Cars93
ggplot(data=Cars93, aes(x=Manufacturer, y=Price))+geom_boxplot()
ggplot(data=Cars93, aes(x=Manufacturer, y=Price))+geom_boxplot(fill="orange")
ggplot(data=Cars93, aes(x=Manufacturer, y=Price))+geom_boxplot(fill="orange", colour="gray")
ggpairs(Cars93,lower= list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
install.packages("ggpairs")
install.packages("GGally")
ggpairs(Cars93,lower= list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
setwd("~/GitHub/Peiying/hw3")
library(tm)
library(tmcn)
library(Matrix)
library(wordcloud)
library(ggplot2)
library(varhandle)
library(scales)
library(dygraphs)
library(xts)
library(factoextra)
docs <- readLines("./DATA/01.txt")
docs <- readLines("./DATA/02.txt")
docs <- readLines("./DATA/03.txt")
docs <- readLines("./DATA/04.txt")
docs <- readLines("./DATA/05.txt")
docs <- readLines("./DATA/06.txt")
docs <- gsub("\\[[0-9]+\\]", "", docs)
##將txt檔匯入成corpus檔
docs.corpus <- Corpus(VectorSource(docs))
##將corpus檔斷詞
docs.seg <- tm_map(docs.corpus, segmentCN)
##斷詞後轉成tdm檔
docs.tdm <- TermDocumentMatrix(docs.seg, control = list())
inspect(docs.tdm)
docs.tf <- apply(as.matrix(docs.tdm), 2, function(doc) {doc / sum(doc)})
##定義計算idf的function
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
##計算idf
docs.idf <- apply(docs.tdm, 1, idf.function)
##tfidf = tf*idf
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f )
wordcloud(docs.df$word, docs.df$freq, scale=c(15,0.1),min.freq=20,max.words=50, colors=brewer.pal(10, "Paired"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f )
wordcloud(docs.df$word, docs.df$freq, scale=c(15,0.1),min.freq=20,max.words=50, colors=brewer.pal(10, "Paired"))
ggplot(data = docs.df,aes(x = word, y = freq , colour = word)) +
geom_point() +
xlab("word") +  ylab ("freq")
docs.pca <- prcomp(docs.tfidf, scale = T)
fviz_eig(docs.pca)
fviz_pca_ind(docs.pca, geom.ind = c("point"), col.ind = "cos2")
fviz_pca_var(docs.pca, col.var = "contrib")
fviz_pca_biplot(docs.pca, geom.ind = "point")
docs.eig <- get_eig(docs.pca)
docs.var <- get_pca_var(docs.pca)
docs.ind <- get_pca_ind(docs.pca)
docs.eig <- get_eig(docs.pca)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 1:3, pch = 8, cex = 2)
library(tm)
library(tmcn)
library(Matrix)
library(wordcloud)
library(ggplot2)
library(varhandle)
library(scales)
library(dygraphs)
library(xts)
library(factoextra)
docs <- readLines("./DATA/01.txt")
docs <- readLines("./DATA/02.txt")
docs <- readLines("./DATA/03.txt")
docs <- readLines("./DATA/04.txt")
docs <- readLines("./DATA/05.txt")
docs <- readLines("./DATA/06.txt")
##將txt檔匯入成corpus檔
docs.corpus <- Corpus(VectorSource(docs))
##將corpus檔斷詞
docs.seg <- tm_map(docs.corpus, segmentCN)
##斷詞後轉成tdm檔
docs.tdm <- TermDocumentMatrix(docs.seg, control = list())
inspect(docs.tdm)
##將txt檔匯入成corpus檔
docs.corpus <- Corpus(VectorSource(docs))
##將corpus檔斷詞
docs.seg <- tm_map(docs.corpus, segmentCN)
##斷詞後轉成tdm檔
docs.tdm <- TermDocumentMatrix(docs.seg, control = list())
inspect(docs.tdm)
##計算每個詞的term frequency
docs.tf <- apply(as.matrix(docs.tdm), 2, function(doc) {doc / sum(doc)})
##定義計算idf的function
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
##計算idf
docs.idf <- apply(docs.tdm, 1, idf.function)
##tfidf = tf*idf
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f )
wordcloud(docs.df$word, docs.df$freq, scale=c(15,0.1),min.freq=20,max.words=50, colors=brewer.pal(10, "Paired"))
ggplot(data = docs.df,aes(x = word, y = freq , colour = word)) +
geom_point() +
xlab("word") +  ylab ("freq")
ggplot(data = docs.df,aes(x = word, y = freq , colour = word)) +
geom_point() +
xlab("word") +  ylab ("freq")
ggplot(data = docs.df,aes(x = word, y = freq , colour = word)) +
geom_point() +
xlab("word") +  ylab ("freq")
library(ggplot2)
ggplot(data = docs.df,aes(x = word, y = freq , colour = word)) +
geom_point() +
xlab("word") +  ylab ("freq")
view(docs.tdm)
docs.tdm
View(docs.tdm)
docs.tdm
inspect(docs.tdm)
library(ggplot2)
ggplot(data = docs.df,aes(x = word, y = freq , colour = word)) +
geom_point() +
xlab("word") +  ylab ("freq")
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("寶玉", "黛玉", "劉姥姥", "寶釵"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("寶玉", "黛玉", "劉姥姥", "寶釵"))
t = t(docs.tfidf)
query.tfidf(c("寶玉", "黛玉", "劉姥姥", "寶釵"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("寶玉", "黛玉", "劉姥姥", "寶釵"))
strsplit(code, "\n", fixed = TRUE)
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("寶玉", "黛玉", "劉姥姥", "寶釵"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("寶玉", "黛玉", "劉姥姥"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("寶玉", "黛玉"))
docs.pca <- prcomp(docs.tfidf, scale = T)
fviz_eig(docs.pca)
fviz_pca_ind(docs.pca, geom.ind = c("point"), col.ind = "cos2")
fviz_pca_var(docs.pca, col.var = "contrib")
fviz_pca_biplot(docs.pca, geom.ind = "point")
#PCA results
docs.eig <- get_eig(docs.pca)
docs.var <- get_pca_var(docs.pca)
docs.ind <- get_pca_ind(docs.pca)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 1:3, pch = 8, cex = 2)
library(ggplot2)
ggplot(data = docs.df,aes (x = word, y = freq , colour = word)) +
geom_point()
library(ggplot2)
ggplot(data = docs.df,aes (x = word, y = freq)) +
geom_point()
ggplot(data = docs.df, aes(word, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words))
library(ggplot2)
ggplot(data = docs.df, aes(word, freq)) +
geom_point(aes(color = word, shape = word), size = 5) +
geom_line(aes(group = word, linetype = word))
library(ggplot2)
ggplot(data = docs.df, aes(word, freq)) +
geom_point(aes(color = word, shape = word), size = 5) +
geom_line(aes(group = word, linetype = word))+geom_path()
library(ggplot2)
ggplot(data = docs.df, aes(word, freq)) +
geom_point(aes(color = word, shape = word), size = 5) +
geom_line(aes(group = word, linetype = word))+geom_path()
library(ggplot2)
ggplot(data = docs.df, aes(word, freq)) +
geom_bar(aes(color = word, shape = word), size = 5) +
library(ggplot2)
ggplot(data = docs.df, aes(word, freq)) +
geom_bar(aes(color = word, shape = word)) +
docs.pca <- prcomp(docs.tfidf, scale = T)
###font color="purple"賈寶玉&林黛玉明明是紅樓夢的主角,但是在前6章好像不太重要,反而劉姥姥戲份那麼重,之前都沒注意到
